Universidade Federal de Goiás
Goiânia 23 de outubro de 2015
Professor: Dr. Edmundo Spoto
Alunos: Dhiogo Neres, Filipe Barros

Trabalho de Matrizes;

————————————————————————————————————————————————————————————
//Matriz Triangular Inferior;

#include <stdio.h>
#include <stdlib.h>
#define N 5
typedef int Mat_Tri_Inf[((N*N+N)/2)];

void Entrada_Dados(Mat_Tri_Inf X)
{ int i, j, k=0;
    for (i=1;i<=N;i++)
        for(j=1;j<=i;j++)
        { printf("Entre com o valor da Matriz na posicao Mti[%d][%d] :\n",i,j);
            scanf("%d",&X[k]);
            k++;
        }
}

int Map_Mat_tri_inf (int i, int j)
{ if (i<j)
    return (-1); //valor não existe no vetor
else return(((i*i-i)/2) +j -1);
            }
            
            void Exibir_Matriz_ti(Mat_Tri_Inf X)
            { int i, j, k, nulo =0;
                printf(" MATRIZ TRIANGULAR INFERIOR \n");
                printf("=========================== \n \n");
                for(i=1;i<=N;i++)
                { for(j=1;j<=N;j++)
                { k = Map_Mat_tri_inf(i,j);
                    if (k!=-1)
                        printf("%5d",X[k]);
                    else printf("%5d",nulo);
                }
                    printf ("\n");
                }
            }

                
                void Consultar_Elemento (Mat_Tri_Inf X)
                { int i, j, k;
                    printf("Entre com a linha e coluna que deseja consultar na matriz:\n ");
                    printf("linha :");
                    scanf("%d",&i);
                    printf("\nColuna: ");
                    scanf("%d",&j);
                    if (((i>0)&&(i<N+1)) && ((j>0)&&(j<N+1)))
                    { k = Map_Mat_tri_inf(i,j);
                        if (k==-1)
                            printf("O Valor procurado é 0");
                        else printf("O Valor procurado é %5d",X[k]);
                    }
                    else printf(" Os valores da linha ou coluna estão fora da Matriz de dimensão %d x %d\n",N,N);
                }
            

int main()
{
    Mat_Tri_Inf X;
    Entrada_Dados(X);
    Exibir_Matriz_ti(X);
    Consultar_Elemento(X);
    
    return 0;
}



—————————————————————————————————————————————————————————————————————
//Matriz Diagonal;

#include <stdio.h>
#include <stdlib.h>
#define N 5

typedef int Mat_Diag_Simp[N];

void EntradaManual_Diag(Mat_Diag_Simp X){
	int i;
	for (i=0; i<N; i++){
		printf ("\nEntre com o valor de M[%d][%d]: ", i+1, i+1);
		scanf ("%d", &X[i]);
	}
}

void EntradaRand_Diag(Mat_Diag_Simp X){
	int i;
	printf ("Escolhendo valores aleatórios...\n");
	for (i = 0; i<N; i++){
		X[i]=(rand() % 40 - 20);
	}
}

void ExibeMatriz_Diag(Mat_Diag_Simp X){
	int i, j;
	printf("  MATRIZ DIAGONAL SIMPLES\n");
	printf("=========================== \n \n");
	for(i=0;i<N;i++){
		for(j=0;j<N;j++){
			if (i==j)
				printf("%5d",X[i]);
			else printf("%5d",0);
		}
		printf ("\n");
	}
	printf ("\n");
}

int Mapeamento_Diag(int i, int j){
	if (i==j)
		return i;
	else return -1;//valor nÃ£o existe no vetor;
}

void ConsultaElemento_Diag(Mat_Diag_Simp X, char s){
	int i, j;
	printf("Entre com as coordenadas do elemento para consulta:\n");
	printf("linha: ");
	scanf("%d", &i);
	printf("\ncoluna: ");
	scanf("%d", &j);
	printf("\n");
	if (i == j){
		printf ("O valor de %c[%d][%d] é: %d\n", s, i, i, X[i-1]);
	}else{
		printf ("O valor de %c[%d][%d] é: 0\n", s, i, i);
	}
}
int main() {
	int preench, consult;
	Mat_Diag_Simp a;
	do{
		do{
			printf ("Escolha a opção de preenchimento:\n\t1. Preenchimento manual;\n\t2. Preenchimento randomico;\n\t3. Sair\n");
			scanf ("%d",&preench);
			if (preench<1||preench>3){
				preench=0;
				printf("Entrada inválida!\n");
			}
		}while (preench==0);
		
		switch (preench) {
			case 1:	EntradaManual_Diag(a);
					break;
			case 2: EntradaRand_Diag(a);
					break;
		}
		
		if(preench!=3){
			do{
				printf ("Escolha a opção de visualização:\n\t1. Matriz inteira;\n\t2. Pesquisa componente;\n\t3. Voltar;\n");
				scanf ("%d", &consult);
				
				switch (consult){
					case 1: ExibeMatriz_Diag(a);
							break;
					case 2: ConsultaElemento_Diag(a,'A');
							break;
				}
				if (consult<1||consult>3){
					printf ("Entrada inválida!!\n");
				}
			}while (consult!=3);
		}	
	}while (preench!=3);
	return 0;
}
